services:
  postgres:
    image: shermanb21/postgres-init:13
    networks:
      - overlay
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]


  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      - overlay
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  nginx-proxy:
    image: nginx:alpine
    networks:
      - overlay
    ports:
      - 8081:8081
      - 8087:8087
    depends_on:
      - gateway-service
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]

  session-service:
    image: shermanb21/session-service:latest
    networks:
      - overlay
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8081" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1 
      placement:
        constraints: [node.role == worker]

  hotel-service:
    image: shermanb21/hotel-service:latest
    networks:
      - overlay
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hotels_db
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8082" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1 
      placement:
        constraints: [node.role == worker]

  booking-service:
    image: shermanb21/booking-service:latest
    networks:
      - overlay
    depends_on:
      - postgres
      - rabbitmq
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reservations_db
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
      HOTEL_SERVICE_HOST: hotel-service
      HOTEL_SERVICE_PORT: 8082
      PAYMENT_SERVICE_HOST: payment-service
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyalty-service
      LOYALTY_SERVICE_PORT: 8085
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8083" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy: 
      replicas: 1
      placement:
        constraints: [node.role == worker]

  payment-service:
    image: shermanb21/payment-service:latest
    networks:
      - overlay
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments_db
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8084" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1 
      placement:
        constraints: [node.role == worker]

  loyalty-service:
    image: shermanb21/loyalty-service:latest
    networks:
      - overlay
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: balances_db
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8085" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1 
      placement:
        constraints: [node.role == worker]

  report-service:
    image: shermanb21/report-service:latest
    networks:
      - overlay
    depends_on:
      - postgres
      - rabbitmq
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: statistics_db
      RABBIT_MQ_HOST: rabbitmq
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_USER: guest
      RABBIT_MQ_PASSWORD: guest
      RABBIT_MQ_QUEUE_NAME: messagequeue
      RABBIT_MQ_EXCHANGE: messagequeue-exchange
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8086" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s   
    deploy:
      replicas: 1 
      placement:
        constraints: [node.role == worker]

  gateway-service:
    image: shermanb21/gateway-service:latest
    networks:
      - overlay
    environment:
      SESSION_SERVICE_HOST: session-service
      SESSION_SERVICE_PORT: 8081
      HOTEL_SERVICE_HOST: hotel-service
      HOTEL_SERVICE_PORT: 8082
      BOOKING_SERVICE_HOST: booking-service
      BOOKING_SERVICE_PORT: 8083
      PAYMENT_SERVICE_HOST: payment-service
      PAYMENT_SERVICE_PORT: 8084
      LOYALTY_SERVICE_HOST: loyalty-service
      LOYALTY_SERVICE_PORT: 8085
      REPORT_SERVICE_HOST: report-service
      REPORT_SERVICE_PORT: 8086
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8087" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]

volumes:
  postgres_data:

networks:
  overlay:
    external: true